{"version":3,"sources":["api/ajax.js","api/index.js","components/editor-toolbar/constants.js","components/editor-toolbar/index.jsx","components/editor/index.jsx","assets/js/index.js"],"names":["ajax","url","data","type","paramStr","Object","keys","forEach","key","substring","length","axios","get","post","interceptors","request","use","config","token","localStorage","getItem","headers","common","response","res","error","status","window","location","href","Promise","reject","reqGetCode","mail","reqRegister","password","code","reqReset","reqLogin","reqGetUser","reqAddNote","rawContentState","category","reqUpdateNote","_id","reqGetNote","pageIndex","pageSize","keyword","reqDeleteNote","itemCheckedIds","reqCategory","reqMoveCategory","inlineStyleButtons","value","style","icon","blockTypeButtons","block","EditorToolBar","props","editorState","updateEditorState","toggleInlineStyle","event","preventDefault","currentTarget","getAttribute","RichUtils","toggleBlockType","className","map","button","getCurrentInlineStyle","has","data-style","onMouseDown","renderInlineStyleButton","getCurrentBlockType","data-block","renderBlockButton","keyBindingFunction","KeyBindingUtil","hasCommandModifier","keyCode","getDefaultKeyBinding","ReactEditor","onChange","setState","save","a","state","resNoteId","match","params","id","contentState","getCurrentContent","convertToRaw","blocks","every","row","text","trim","info","JSON","stringify","err","success","fail","handleKeyCommand","command","undo","EditorState","redo","focus","document","activeElement","contentEditable","blockMap","getBlockMap","last","getKey","getLength","selection","SelectionState","anchorKey","anchorOffset","focusKey","focusOffset","acceptSelection","moveSelectionToEnd","domEditor","setDomEditorRef","ref","createEmpty","updateTime","isLoading","this","parse","createWithContent","convertFromRaw","history","replace","content","getSelection","newContentState","getEndOffset","getStartOffset","Modifier","insertText","replaceText","newEditorState","push","setTimeout","e","appendContent","showPlaceholder","hasText","first","getType","undoClassName","redoClassName","getUndoStack","size","getRedoStack","textAlign","marginTop","color","mode","onLeftClick","pathname","rightContent","onClick","marginRight","formatTime","onKeyDown","handleKeyEvent","bind","customStyleMap","placeholder","keyBindingFn","Component","isMail","test","timeStamp","d","Date","year","getFullYear","month","getMonth","date","getDate","h","getHours","m","getMinutes"],"mappings":"yeAiBe,SAASA,EAAKC,GAA2B,IAAtBC,EAAqB,uDAAhB,GAAIC,EAAY,uDAAP,MAC9C,GAAa,QAATA,EAAgB,CAClB,IAAIC,EAAW,GAUf,OARAC,OAAOC,KAAKJ,GAAMK,SAAQ,SAAAC,GACpBN,EAAKM,KACPJ,GAAYI,EAAM,IAAMN,EAAKM,GAAO,QAGpCJ,IACFA,EAAWA,EAASK,UAAU,EAAGL,EAASM,OAAO,IAE5CC,IAAMC,IAAIX,EAAM,IAAMG,GAE7B,OAAOO,IAAME,KAAKZ,EAAKC,GA7B3BS,IAAMG,aAAaC,QAAQC,KAAI,SAAAC,GAC7B,IAAMC,EAAQC,aAAaC,QAAQ,SAInC,OAHIF,GAAwB,WAAfD,EAAOhB,KAAmC,cAAfgB,EAAOhB,MAC7CgB,EAAOI,QAAQC,OAAf,cAAyC,UAAYJ,GAEhDD,KAGTN,IAAMG,aAAaS,SAASP,KAAI,SAAAQ,GAAG,OAAIA,KAAK,SAAAC,GAI1C,OAHIA,EAAMF,UAAsC,MAA1BE,EAAMF,SAASG,SACnCC,OAAOC,SAASC,KAAO,UAElBC,QAAQC,OAAON,MCZjB,IAAMO,EAAa,SAACC,GAAD,OAAUjC,EAAK,gBAAiB,CAAEiC,UAC/CC,EAAc,SAAC,GAAD,OAA8BlC,EAAK,iBAAkB,CAAEiC,KAAvD,EAAGA,KAA0DE,SAA7D,EAASA,SAA8DC,KAAvE,EAAmBA,MAA4D,SAC7FC,EAAW,SAAC,GAAD,OAA8BrC,EAAK,cAAe,CAAEiC,KAApD,EAAGA,KAAuDE,SAA1D,EAASA,SAA2DC,KAApE,EAAmBA,MAAyD,SACvFE,EAAW,SAAC,GAAD,OAAwBtC,EAAK,cAAe,CAAEiC,KAA9C,EAAGA,KAAiDE,SAApD,EAASA,UAAuD,SAC3EI,EAAa,kBAAMvC,EAAK,kBACxBwC,EAAa,SAAC,GAAD,OAAmCxC,EAAK,YAAa,CAACyC,gBAAtD,EAAGA,gBAAoEC,SAAvE,EAAoBA,UAA8D,SAC/FC,EAAgB,SAAC,GAAD,OAA8B3C,EAAK,eAAgB,CAAC4C,IAApD,EAAGA,IAAsDH,gBAAzD,EAAQA,iBAAmE,SAC3FI,EAAa,SAAC,GAAD,OAAqD7C,EAAK,QAAS,CAAE4C,IAArE,EAAGA,IAAuEE,UAA1E,EAAQA,UAA6EC,SAArF,EAAmBA,SAA4EL,SAA/F,EAA6BA,SAA4EM,QAAzG,EAAuCA,WACpDC,EAAgB,SAAC,GAAD,OAAwBjD,EAAK,eAAgB,CAAEkD,eAA/C,EAAGA,gBAA8D,SACjFC,EAAc,kBAAMnD,EAAK,sBACzBoD,EAAkB,SAAC,GAAD,OAAkCpD,EAAK,qBAAsB,CAAEkD,eAA/D,EAAGA,eAA4ER,SAA/E,EAAmBA,UAAwE,U,sPCZ7GW,EAAqB,CAChC,CACEC,MAAO,OACPC,MAAO,OACPC,KAAM,aAER,CACEF,MAAO,SACPC,MAAO,SACPC,KAAM,oBAER,CACEF,MAAO,YACPC,MAAO,YACPC,KAAM,mBAER,CACEF,MAAO,gBACPC,MAAO,gBACPC,KAAM,uBAER,CACEF,MAAO,OACPC,MAAO,OACPC,KAAM,aAER,CACEF,MAAO,YACPC,MAAO,YACPC,KAAM,mBAIGC,EAAmB,CAC9B,CACEH,MAAO,cACPI,MAAO,aACPF,KAAM,WAER,CACEF,MAAO,cACPI,MAAO,aACPF,KAAM,WAER,CACEF,MAAO,aACPI,MAAO,aACPF,KAAM,mBAER,CACEF,MAAO,iBACPI,MAAO,sBACPF,KAAM,uBAER,CACEF,MAAO,eACPI,MAAO,oBACPF,KAAM,sB,OCFKG,MAlDf,SAAuBC,GAAQ,IACrBC,EAAmCD,EAAnCC,YAAaC,EAAsBF,EAAtBE,kBA6BfC,EAAoB,SAACC,GACzBA,EAAMC,iBACN,IAAIV,EAAQS,EAAME,cAAcC,aAAa,cAC7CL,EAAkBM,YAAUL,kBAAkBF,EAAaN,KAGvDc,EAAkB,SAACL,GACvBA,EAAMC,iBACN,IAAIP,EAAQM,EAAME,cAAcC,aAAa,cAC7CL,EAAkBM,YAAUC,gBAAgBR,EAAaH,KAG3D,OACE,yBAAKY,UAAU,WACXjB,EAAmBkB,KAAI,SAAAC,GAAM,OAzCH,SAAClB,EAAOC,EAAOC,GAC7C,IACIc,EAAY,GAIhB,OAL2BT,EAAYY,wBAEhBC,IAAInB,KACzBe,EAAY,UAGZ,yBAAK9D,IAAK+C,EAAOe,UAAS,yBAAoBA,GAAaK,aAAYpB,EAAOqB,YAAab,GACxFP,EAAO,uBAAGc,UAAS,mBAAcd,KAAaF,GAiCduB,CAAwBL,EAAOlB,MAAOkB,EAAOjB,MAAOiB,EAAOhB,SAC5FC,EAAiBc,KAAI,SAAAC,GAAM,OA7BP,SAAClB,EAAOI,EAAOF,GACvC,IACIc,EAAY,GAKhB,OANyBF,YAAUU,oBAAoBjB,KAE9BH,IACvBY,EAAY,UAIZ,0BAAM9D,IAAKkD,EAAOY,UAAS,yBAAoBA,GAAaS,aAAYrB,EAAOkB,YAAaP,GACzFb,EAAO,uBAAGc,UAAS,mBAAcd,KAAaF,GAoBhB0B,CAAkBR,EAAOlB,MAAOkB,EAAOd,MAAOc,EAAOhB,W,uBC1C5F,SAASyB,EAAmBjB,GAG1B,OAAIkB,iBAAeC,mBAAmBnB,IAA6B,KAAlBA,EAAMoB,QAC9C,gBAILF,iBAAeC,mBAAmBnB,IAA6B,KAAlBA,EAAMoB,QAC9C,YAILF,iBAAeC,mBAAmBnB,IAA4B,MAAlBA,EAAMoB,QAC7C,aAILF,iBAAeC,mBAAmBnB,IAA4B,MAAlBA,EAAMoB,QAC7C,aAILF,iBAAeC,mBAAmBnB,IAA4B,KAAlBA,EAAMoB,QAC7C,aAILF,iBAAeC,mBAAmBnB,IAA4B,KAAlBA,EAAMoB,QAC7C,iBAILF,iBAAeC,mBAAmBnB,IAA4B,KAAlBA,EAAMoB,QAC7C,eAGFC,+BAAqBrB,G,IAkBxBsB,E,kDACJ,WAAY1B,GAAQ,IAAD,8BACjB,cAAMA,IAUR2B,SAAW,SAAC1B,GACV,EAAK2B,SAAS,CAAE3B,iBAZC,EAmCnB4B,KAnCmB,sBAmCZ,0CAAAC,EAAA,2DAC8B,EAAKC,MAAhC9B,EADH,EACGA,YAAa+B,EADhB,EACgBA,UACjBhD,EAAM,EAAKgB,MAAMiC,MAAMC,OAAOC,GAC9BrD,EAAW,EAAKkB,MAAMiC,MAAMC,OAAOpD,SACjCsD,EAAenC,EAAYoC,oBAC3BxD,EAAmByD,uBAAaF,IACxBvD,EAAgB0D,OAAOC,OAAM,SAAAC,GAAG,MAAwB,KAApBA,EAAIC,KAAKC,UANtD,yCAQc,IAAMC,KAAK,YAAa,IARtC,UAUO,QAAR5D,EAVC,oBAWc,6BAAbF,IAAqBA,EAAW,sBAC/BkD,EAZF,kCAaiBpD,YAAW,CAAEC,gBAAiBgE,KAAKC,UAAUjE,GAAkBC,aAbhF,WAcoB,KADflB,EAbL,QAcOtB,KAAKyG,IAdZ,wBAeC,EAAKnB,SAAS,CAAEI,UAAWpE,EAAItB,KAAKA,OAfrC,kBAgBQ,IAAM0G,QAAQ,2BAAQ,GAAG,eAAQ,IAhBzC,0CAoBDhE,EAAMgD,EApBL,yBAwBajD,YAAc,CAAEC,MAAKH,gBAAiBgE,KAAKC,UAAUjE,KAxBlE,WAyBgB,IAzBhB,OAyBGvC,KAAKyG,IAzBR,0CAyB0B,IAAMC,QAAQ,2BAAQ,IAzBhD,QA2BL,IAAMC,KAAK,2BAAQ,GA3Bd,4CAnCY,EAkEnB/C,kBAAoB,SAACD,GAAD,OAAiB,EAAK2B,SAAS,CAAC3B,iBAlEjC,EAoEnBiD,iBAAmB,SAACC,GAClB,IAAIlD,EAAcO,YAAU0C,iBAAiB,EAAKnB,MAAM9B,YAAakD,GA8BrE,OA5BKlD,GAA2B,kBAAZkD,IAClBlD,EAAcO,YAAUL,kBAAkB,EAAK4B,MAAM9B,YAAa,kBAG/DA,GAA2B,eAAZkD,IAClBlD,EAAcO,YAAUC,gBAAgB,EAAKsB,MAAM9B,YAAa,eAG7DA,GAA2B,eAAZkD,IAClBlD,EAAcO,YAAUC,gBAAgB,EAAKsB,MAAM9B,YAAa,eAG7DA,GAA2B,eAAZkD,IAClBlD,EAAcO,YAAUC,gBAAgB,EAAKsB,MAAM9B,YAAa,eAG7DA,GAA2B,iBAAZkD,IAClBlD,EAAcO,YAAUC,gBAAgB,EAAKsB,MAAM9B,YAAa,sBAG7DA,GAA2B,mBAAZkD,IAClBlD,EAAcO,YAAUC,gBAAgB,EAAKsB,MAAM9B,YAAa,wBAG7DA,GAA2B,cAAZkD,IAClBlD,EAAcO,YAAUL,kBAAkB,EAAK4B,MAAM9B,YAAa,cAGhEA,GACF,EAAK2B,SAAS,CAAC3B,gBACR,WAGF,eAxGU,EA2GnBmD,KAAO,WAAQ,EAAKxB,SAAS,CAAE3B,YAAcoD,cAAYD,KAAK,EAAKrB,MAAM9B,gBA3GtD,EA4GnBqD,KAAO,WAAQ,EAAK1B,SAAS,CAAE3B,YAAaoD,cAAYC,KAAK,EAAKvB,MAAM9B,gBA5GrD,EA8GnBsD,MAAQ,WACN,GAA8C,SAA3CC,SAASC,cAAcC,gBAA4B,CACpD,IAAMzD,EA/HZ,SAA4BA,GAC1B,IACM0D,EADU1D,EAAYoC,oBACHuB,cACnBhH,EAAM+G,EAASE,OAAOC,SACtBhH,EAAS6G,EAASE,OAAOE,YACzBC,EAAY,IAAIC,iBAAe,CACjCC,UAAWtH,EACXuH,aAAcrH,EACdsH,SAAUxH,EACVyH,YAAavH,IAEjB,OAAOuG,cAAYiB,gBAAgBrE,EAAa+D,GAoHxBO,CAAmB,EAAKxC,MAAM9B,aAClD,EAAK2B,SAAS,CAAE3B,gBAAc,WAC1B,EAAKuE,UAAUjB,aAhHrB,EAAKkB,gBAAkB,SAAAC,GAAG,OAAI,EAAKF,UAAYE,GAC/C,EAAK3C,MAAQ,CACX9B,YAAaoD,cAAYsB,cACzBC,WAAY,EAAK5E,MAAMhC,SAAS+D,MAChC8C,WAAW,EACX7C,UAAW,IAPI,E,uLAiBN,SADLG,EAAK2C,KAAK9E,MAAMiC,MAAMC,OAAOC,I,yCAE1B2C,KAAKlD,SAAS,CACnBiD,WAAW,K,uBAIG5F,YAAW,CAACD,IAAKmD,I,OACd,KADfvE,E,QACEtB,KAAKyG,KACLlE,EAAkBgE,KAAKkC,MAAMnH,EAAItB,KAAKA,MAC5CwI,KAAKlD,SAAS,CACZ3B,YAAcoD,cAAY2B,kBAAkBC,yBAAepG,IAC3DgG,WAAW,KAGbC,KAAK9E,MAAMkF,QAAQC,QAAQ,Q,0IAuFjBC,EAAS7I,GAAO,IAAD,OACrB0D,EAAc6E,KAAK/C,MAAM9B,YACzB+D,EAAY/D,EAAYoF,eACxBjD,EAAenC,EAAYoC,oBAC7BiD,EAAkB,KAMpBA,EAHmBtB,EAAUuB,iBACRvB,EAAUwB,iBAEbC,WAASC,WAAWtD,EAAc4B,EAAWoB,GAE7CK,WAASE,YAAYvD,EAAc4B,EAAWoB,GAElE,IAAMQ,EAAiBvC,cAAYwC,KAAK5F,EAAaqF,EAAiB/I,GACtEuI,KAAKnD,SAASiE,GACdE,YAAW,WACT,EAAKvC,UACJ,K,qCAGUwC,GACK,IAAdA,EAAEvE,UAEJuE,EAAE1F,iBACFyE,KAAKkB,cAAc,KAAM,wB,+BAInB,IAAD,SACwClB,KAAK/C,MAA5C9B,EADD,EACCA,YAAa2E,EADd,EACcA,WAAYC,EAD1B,EAC0BA,UAS3BzC,EAAenC,EAAYoC,oBAC7B4D,GAAkB,EACjB7D,EAAa8D,WACqC,aAAjD9D,EAAawB,cAAcuC,QAAQC,YACrCH,GAAkB,GAKtB,IAAII,EAAgB,GAChBC,EAAgB,GASpB,OAPwC,IAApCrG,EAAYsG,eAAeC,OAC7BH,EAAgB,QAEsB,IAApCpG,EAAYwG,eAAeD,OAC7BF,EAAgB,QAGdzB,EACK,yBAAKlF,MAAO,CAAC+G,UAAW,SAAUC,UAAW,IAAKC,MAAO,SAAzD,cAIP,oCACE,yBAAKlG,UAAU,iBACb,uBACEmG,KAAK,QACLjH,KAAM,uBAAMrD,KAAK,OAAOiK,KAAK,OAC7BM,YAAa,WAAO,EAAK9G,MAAMkF,QAAQW,KAAK,CAAEkB,SAAU,IAAKjI,SAAU,EAAKkB,MAAMiC,MAAMC,OAAOpD,YAC/FkI,aAAc,CACZ,0BAAMpK,IAAI,IAAI8D,UAAS,+BAA0B2F,GAAiBY,QAASnC,KAAK1B,KAAMzD,MAAO,CAACuH,YAAa,MAC3G,0BAAMtK,IAAI,IAAI8D,UAAS,gCAA2B4F,GAAiBW,QAASnC,KAAKxB,KAAM3D,MAAO,CAACuH,YAAa,MAC5G,0BAAMtK,IAAI,IAAI8D,UAAU,oBAAoBuG,QAASnC,KAAKjD,SAG5D,0BAAMnB,UAAU,aAAayG,YAAWvC,KAE1C,kBAAC,EAAD,CAAe3E,YAAaA,EAAcC,kBAAmB4E,KAAK5E,qBAEpE,yBAAKQ,UAAS,yBAAqBuF,EAAuC,GAArB,qBACnD,yBAAKvF,UAAU,mBAAmBuG,QAAWnC,KAAKvB,MAAO6D,UAAWtC,KAAKuC,eAAeC,KAAKxC,OAC3F,kBAAC,SAAD,CACEyC,eAlDO,CACf,UAAa,CACX,gBAAmB,YAiDbtH,YAAaA,EACb0B,SAAU,SAACvB,GAAD,OAAW,EAAKuB,SAASvB,IACnCoH,YAAY,yBACZtE,iBAAkB4B,KAAK5B,iBACvBuE,aAAcpG,EACdqD,IAAKI,KAAKL,yB,GA/MEiD,aAwNXhG,a,gCCvRf,oEAAO,IAAMiG,EAAS,SAACtJ,GAErB,MADU,0DACCuJ,KAAKvJ,IAGL8I,EAAa,SAACU,GACzB,IAAIC,EAAI,IAAIC,KAAKF,GACbG,EAAOF,EAAEG,cACTC,EAAQJ,EAAEK,WAAa,EACvBC,EAAON,EAAEO,UACTC,EAAIR,EAAES,WACNC,EAAIV,EAAEW,aAQV,OANIH,EAAI,KACNA,EAAI,IAAMA,GAERE,EAAI,KACNA,EAAI,IAAMA,GAELR,EAAO,SAAME,EAAQ,SAAME,EAAQ,UAAOE,EAAI,IAAME","file":"static/js/13.6370dbd1.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\naxios.interceptors.request.use(config => {\r\n  const token = localStorage.getItem('token')\r\n  if (token && config.url !== '/login' && config.url !== '/register') {\r\n    config.headers.common['Authorization'] = 'Bearer ' + token\r\n  }\r\n  return config\r\n})\r\n\r\naxios.interceptors.response.use(res => res, error => {\r\n  if (error.response && error.response.status === 401) {\r\n    window.location.href = '/login'\r\n  }\r\n  return Promise.reject(error)\r\n})\r\n\r\nexport default function ajax(url, data={}, type='GET') {\r\n  if (type === 'GET') {\r\n    let paramStr = ''\r\n\r\n    Object.keys(data).forEach(key => {\r\n      if (data[key]) {\r\n        paramStr += key + '=' + data[key] + '&'\r\n      }\r\n    })\r\n    if (paramStr) {\r\n      paramStr = paramStr.substring(0, paramStr.length-1)\r\n    }\r\n    return axios.get(url + '?' + paramStr)\r\n  } else {\r\n    return axios.post(url, data)\r\n  }\r\n}","import ajax from './ajax'\r\n\r\nexport const reqGetCode = (mail) => ajax('/user/getcode', { mail })\r\nexport const reqRegister = ({ mail, password, code }) => ajax('/user/register', { mail, password, code }, 'POST')\r\nexport const reqReset = ({ mail, password, code }) => ajax('/user/reset', { mail, password, code }, 'POST')\r\nexport const reqLogin = ({ mail, password }) => ajax('/user/login', { mail, password }, 'POST')\r\nexport const reqGetUser = () => ajax('/user/getuser')\r\nexport const reqAddNote = ({ rawContentState, category }) => ajax('/note/add', {rawContentState, category}, 'POST')\r\nexport const reqUpdateNote = ({ _id, rawContentState }) => ajax('/note/update', {_id, rawContentState}, 'POST')\r\nexport const reqGetNote = ({ _id, pageIndex, pageSize, category, keyword }) => ajax('/note', { _id, pageIndex, pageSize, category, keyword })\r\nexport const reqDeleteNote = ({ itemCheckedIds }) => ajax('/note/delete', { itemCheckedIds }, 'POST')\r\nexport const reqCategory = () => ajax('/note/getcategory')\r\nexport const reqMoveCategory = ({ itemCheckedIds, category }) => ajax('/note/movecategory', { itemCheckedIds, category }, 'POST') ","export const inlineStyleButtons = [\r\n  {\r\n    value: 'Bold',\r\n    style: 'BOLD',\r\n    icon: 'icon-bold'\r\n  },\r\n  {\r\n    value: 'Italic',\r\n    style: 'ITALIC',\r\n    icon: 'icon-icon_italic'\r\n  },\r\n  {\r\n    value: 'Underline',\r\n    style: 'UNDERLINE',\r\n    icon: 'icon-under-line'\r\n  },\r\n  {\r\n    value: 'Strikethrough',\r\n    style: 'STRIKETHROUGH',\r\n    icon: 'icon-strike-through'\r\n  },\r\n  {\r\n    value: 'Code',\r\n    style: 'CODE',\r\n    icon: 'icon-code'\r\n  },\r\n  {\r\n    value: 'Highlight',\r\n    style: 'HIGHLIGHT',\r\n    icon: 'icon-highlight'\r\n  }\r\n]\r\n\r\nexport const blockTypeButtons = [\r\n  {\r\n    value: 'Heading One',\r\n    block: 'header-one',\r\n    icon: 'icon-h2'\r\n  },\r\n  {\r\n    value: 'Heading Two',\r\n    block: 'header-two',\r\n    icon: 'icon-h4'\r\n  },\r\n  {\r\n    value: 'Blockquote',\r\n    block: 'blockquote',\r\n    icon: 'icon-blockquote'\r\n  },\r\n  {\r\n    value: 'Unordered List',\r\n    block: 'unordered-list-item',\r\n    icon: 'icon-e-unorder-list'\r\n  },\r\n  {\r\n    value: 'Ordered List',\r\n    block: 'ordered-list-item',\r\n    icon: 'icon-e-order-list'\r\n  }\r\n];","import React from 'react'\r\nimport { inlineStyleButtons, blockTypeButtons } from './constants'\r\nimport { RichUtils } from 'draft-js'\r\nimport './style.less'\r\n\r\nfunction EditorToolBar(props) {\r\n  const { editorState, updateEditorState } = props\r\n\r\n  const renderInlineStyleButton = (value, style, icon) => {\r\n    const currentInlineStyle = editorState.getCurrentInlineStyle()\r\n    let className = ''\r\n    if (currentInlineStyle.has(style)) {\r\n      className = 'active'\r\n    }\r\n    return (\r\n      <div key={style} className={`icon-container ${className}`} data-style={style} onMouseDown={toggleInlineStyle}>\r\n        {icon ? <i className={`iconfont ${icon}`} /> : value}\r\n      </div>\r\n    )\r\n  }  \r\n\r\n  const renderBlockButton = (value, block, icon) => {\r\n    const currentBlockType = RichUtils.getCurrentBlockType(editorState)\r\n    let className = ''\r\n    if (currentBlockType === block) {\r\n      className = 'active'\r\n    }\r\n\r\n    return (\r\n      <span key={block} className={`icon-container ${className}`} data-block={block} onMouseDown={toggleBlockType}>\r\n        {icon ? <i className={`iconfont ${icon}`} /> : value}\r\n      </span>\r\n    )\r\n  }\r\n\r\n  const toggleInlineStyle = (event) => {\r\n    event.preventDefault()\r\n    let style = event.currentTarget.getAttribute('data-style')\r\n    updateEditorState(RichUtils.toggleInlineStyle(editorState, style))\r\n  }\r\n  \r\n  const toggleBlockType = (event) => {\r\n    event.preventDefault()\r\n    let block = event.currentTarget.getAttribute('data-block')\r\n    updateEditorState(RichUtils.toggleBlockType(editorState, block))\r\n  }\r\n  \r\n  return (\r\n    <div className=\"toolbar\">\r\n      { inlineStyleButtons.map(button => renderInlineStyleButton(button.value, button.style, button.icon))}\r\n      { blockTypeButtons.map(button => renderBlockButton(button.value, button.block, button.icon))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditorToolBar\r\n","import React, { Component } from 'react'\r\nimport { Editor, EditorState, RichUtils, KeyBindingUtil, getDefaultKeyBinding, convertToRaw, convertFromRaw, SelectionState, Modifier } from 'draft-js'\r\nimport EditorToolBar from '../editor-toolbar'\r\nimport { NavBar, Icon, Toast } from 'antd-mobile'\r\nimport { formatTime } from '../../assets/js'\r\nimport { reqAddNote, reqUpdateNote, reqGetNote } from '../../api'\r\nimport './style.less'\r\n\r\nfunction keyBindingFunction(event) {\r\n\r\n  // ctrl + x\r\n  if (KeyBindingUtil.hasCommandModifier(event) && (event.keyCode === 88)) {\r\n    return 'strikethrough'\r\n  }  \r\n\r\n  // ctrl + h\r\n  if (KeyBindingUtil.hasCommandModifier(event) && (event.keyCode === 72)) {\r\n    return 'highlight';\r\n  }\r\n\r\n  // ctrl + [\r\n  if (KeyBindingUtil.hasCommandModifier(event) && event.keyCode === 219) {\r\n    return 'header-one';\r\n  }\r\n\r\n  // ctrl + ]\r\n  if (KeyBindingUtil.hasCommandModifier(event) && event.keyCode === 221) {\r\n    return 'header-two';\r\n  }\r\n\r\n  // ctrl + 7\r\n  if (KeyBindingUtil.hasCommandModifier(event) && event.keyCode === 55) { \r\n    return 'blockquote';\r\n  }\r\n\r\n  // ctrl + 8\r\n  if (KeyBindingUtil.hasCommandModifier(event) && event.keyCode === 56) {\r\n    return 'unordered-list';\r\n  }\r\n\r\n  // ctrl + 9\r\n  if (KeyBindingUtil.hasCommandModifier(event) && event.keyCode === 57) {\r\n    return 'ordered-list';\r\n  }\r\n\r\n  return getDefaultKeyBinding(event)\r\n\r\n}\r\n\r\nfunction moveSelectionToEnd(editorState) {\r\n  const content = editorState.getCurrentContent()\r\n  const blockMap = content.getBlockMap()\r\n  const key = blockMap.last().getKey()\r\n  const length = blockMap.last().getLength()\r\n  const selection = new SelectionState({\r\n      anchorKey: key,\r\n      anchorOffset: length,\r\n      focusKey: key,\r\n      focusOffset: length,\r\n  })\r\n  return EditorState.acceptSelection(editorState, selection)\r\n}\r\n\r\nclass ReactEditor extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.setDomEditorRef = ref => this.domEditor = ref\r\n    this.state = {\r\n      editorState: EditorState.createEmpty(),\r\n      updateTime: this.props.location.state,\r\n      isLoading: true,\r\n      resNoteId: ''\r\n    }\r\n  }\r\n\r\n  onChange = (editorState) => {\r\n    this.setState({ editorState })\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const id = this.props.match.params.id\r\n    if (id === 'add') {\r\n      return this.setState({\r\n        isLoading: false\r\n      })\r\n    }\r\n\r\n    const res = await reqGetNote({_id: id})\r\n    if (res.data.err === 0) {\r\n      const rawContentState = JSON.parse(res.data.data)\r\n      this.setState({\r\n        editorState:  EditorState.createWithContent(convertFromRaw(rawContentState)),\r\n        isLoading: false\r\n      })\r\n    } else {\r\n      this.props.history.replace('/404')\r\n    }\r\n  }\r\n\r\n  save = async () => {\r\n    const { editorState, resNoteId } = this.state\r\n    let _id = this.props.match.params.id\r\n    let category = this.props.match.params.category\r\n    const contentState = editorState.getCurrentContent()\r\n    const rawContentState =  convertToRaw(contentState)\r\n    const empty = rawContentState.blocks.every(row => row.text.trim() === '')\r\n\r\n    if (empty) return  Toast.info('empty !!!', 1);\r\n\r\n    if (_id === 'add' ) {\r\n      if (category === '全部分类') category = '未分类'\r\n      if (!resNoteId) {\r\n        const res = await reqAddNote({ rawContentState: JSON.stringify(rawContentState), category })\r\n        if (res.data.err === 0) {\r\n          this.setState({ resNoteId: res.data.data })\r\n          return Toast.success('添加成功', 1, ()=>{}, false)\r\n        }\r\n        return \r\n      } else {\r\n        _id = resNoteId\r\n      }\r\n    } \r\n\r\n    const res = await reqUpdateNote({ _id, rawContentState: JSON.stringify(rawContentState) })\r\n    if (res.data.err === 0) return Toast.success('更新成功', 1)\r\n\r\n    Toast.fail('保存失败', 1);\r\n    \r\n  }\r\n\r\n  updateEditorState = (editorState) => this.setState({editorState})\r\n  // 键盘监听\r\n  handleKeyCommand = (command) => {\r\n    let editorState = RichUtils.handleKeyCommand(this.state.editorState, command)\r\n\r\n    if (!editorState && command === 'strikethrough') {\r\n      editorState = RichUtils.toggleInlineStyle(this.state.editorState, 'STRIKETHROUGH')\r\n    }\r\n\r\n    if (!editorState && command === 'header-one') {\r\n      editorState = RichUtils.toggleBlockType(this.state.editorState, 'header-one')\r\n    }\r\n\r\n    if (!editorState && command === 'header-two') {\r\n      editorState = RichUtils.toggleBlockType(this.state.editorState, 'header-two')\r\n    }\r\n\r\n    if (!editorState && command === 'blockquote') {\r\n      editorState = RichUtils.toggleBlockType(this.state.editorState, 'blockquote');\r\n    }\r\n\r\n    if (!editorState && command === 'ordered-list') {\r\n      editorState = RichUtils.toggleBlockType(this.state.editorState, 'ordered-list-item');\r\n    }\r\n\r\n    if (!editorState && command === 'unordered-list') {\r\n      editorState = RichUtils.toggleBlockType(this.state.editorState, 'unordered-list-item');\r\n    }\r\n\r\n    if (!editorState && command === 'highlight') {\r\n      editorState = RichUtils.toggleInlineStyle(this.state.editorState, 'HIGHLIGHT');\r\n    }\r\n\r\n    if (editorState) {\r\n      this.setState({editorState})\r\n      return 'handled'\r\n    }\r\n\r\n    return 'not-handled'\r\n  }\r\n\r\n  undo = () => { this.setState({ editorState : EditorState.undo(this.state.editorState) }) }\r\n  redo = () => { this.setState({ editorState: EditorState.redo(this.state.editorState) }) }\r\n\r\n  focus = () => {\r\n    if(document.activeElement.contentEditable !== 'true') {\r\n      const editorState = moveSelectionToEnd(this.state.editorState) \r\n      this.setState({ editorState },()=>{ \r\n          this.domEditor.focus() \r\n      })      \r\n    }\r\n  }\r\n  appendContent(content, type) {\r\n    const editorState = this.state.editorState;\r\n    const selection = editorState.getSelection();\r\n    const contentState = editorState.getCurrentContent();\r\n    let newContentState = null;\r\n\r\n    // 判断是否有选中，有则替换，无则插入\r\n    const selectionEnd = selection.getEndOffset();\r\n    const selectionStart = selection.getStartOffset();\r\n    if (selectionEnd === selectionStart) {\r\n      newContentState = Modifier.insertText(contentState, selection, content);\r\n    } else {\r\n      newContentState = Modifier.replaceText(contentState, selection, content);\r\n    }\r\n    const newEditorState = EditorState.push(editorState, newContentState, type);\r\n    this.onChange(newEditorState);\r\n    setTimeout(()=>{\r\n      this.focus();\r\n    }, 0);\r\n  }\r\n\r\n  handleKeyEvent(e) {\r\n    if (e.keyCode === 9) {\r\n      // 插入tab制表符\r\n      e.preventDefault();\r\n      this.appendContent('\\t', 'insert-characters');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { editorState, updateTime, isLoading } = this.state\r\n    // 自定义高亮style\r\n    const styleMap = {\r\n      'HIGHLIGHT': {\r\n        'backgroundColor': '#faed27'\r\n      }\r\n    }\r\n\r\n    // 解决playholder占位问题\r\n    const contentState = editorState.getCurrentContent()\r\n    let showPlaceholder = false \r\n    if (!contentState.hasText()) {\r\n      if (contentState.getBlockMap().first().getType() === 'unstyled') {\r\n        showPlaceholder = true\r\n      }\r\n    }\r\n\r\n    // 向前/后撤回图标颜色显示\r\n    let undoClassName = '',\r\n        redoClassName = ''\r\n\r\n    if (editorState.getUndoStack().size === 0) {\r\n      undoClassName = 'grey'\r\n    }\r\n    if (editorState.getRedoStack().size === 0) {\r\n      redoClassName = 'grey'\r\n    }\r\n\r\n    if (isLoading) {\r\n      return <div style={{textAlign: 'center', marginTop: 100, color: \"#777\"}}>Loading...</div>\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className=\"editor-header\">\r\n          <NavBar\r\n            mode=\"light\"\r\n            icon={<Icon type=\"left\" size=\"md\" />}\r\n            onLeftClick={() => {this.props.history.push({ pathname: '/', category: this.props.match.params.category})}}\r\n            rightContent={[\r\n              <span key=\"0\" className={`iconfont icon-chehui ${undoClassName}`} onClick={this.undo} style={{marginRight: 20}}/>,\r\n              <span key=\"1\" className={`iconfont icon-qianjin ${redoClassName}`} onClick={this.redo} style={{marginRight: 20}}/>,\r\n              <span key=\"2\" className=\"iconfont icon-dui\" onClick={this.save}/> \r\n            ]}\r\n          >\r\n            <span className=\"edit-time\">{formatTime(updateTime)}</span>\r\n          </NavBar>\r\n          <EditorToolBar editorState={editorState}  updateEditorState={this.updateEditorState}/>\r\n        </div>\r\n        <div className={`editor-wrapper ${!showPlaceholder ? 'hide-placeholder' : ''}`}>\r\n          <div className=\"editor-container\" onClick = {this.focus} onKeyDown={this.handleKeyEvent.bind(this)} >\r\n            <Editor \r\n              customStyleMap={styleMap}\r\n              editorState={editorState} \r\n              onChange={(event) => this.onChange(event)} \r\n              placeholder=\"write your note in ...\"\r\n              handleKeyCommand={this.handleKeyCommand}\r\n              keyBindingFn={keyBindingFunction}  \r\n              ref={this.setDomEditorRef}\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ReactEditor","export const isMail = (mail) => {\r\n  let reg = /^([a-zA-Z]|[0-9])(\\w|-)+@[a-zA-Z0-9]+\\.([a-zA-Z]{2,4})$/\r\n  return reg.test(mail)\r\n}\r\n\r\nexport const formatTime = (timeStamp) => {\r\n  let d = new Date(timeStamp)\r\n  let year = d.getFullYear()\r\n  let month = d.getMonth() + 1\r\n  let date = d.getDate()\r\n  let h = d.getHours()\r\n  let m = d.getMinutes()\r\n\r\n  if (h < 10) {\r\n    h = '0' + h\r\n  }\r\n  if (m < 10) {\r\n    m = '0' + m\r\n  }  \r\n  return year + '年' + month + '月' + date  + '日 ' + h + ':' + m\r\n}\r\n"],"sourceRoot":""}